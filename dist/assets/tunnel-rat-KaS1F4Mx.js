import{R as i}from"./react-j2NvMOCs.js";import{u as y}from"./use-sync-external-store-DTJaU3R_.js";var D={BASE_URL:"/IPhone-web/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const l=t=>{let e;const n=new Set,r=(s,d)=>{const u=typeof s=="function"?s(e):s;if(!Object.is(u,e)){const w=e;e=d??(typeof u!="object"||u===null)?u:Object.assign({},e,u),n.forEach(g=>g(e,w))}},o=()=>e,a={setState:r,getState:o,getInitialState:()=>v,subscribe:s=>(n.add(s),()=>n.delete(s)),destroy:()=>{(D?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},v=e=t(r,o,a);return a},R=t=>t?l(t):l;var m={BASE_URL:"/IPhone-web/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const{useDebugValue:_}=i,{useSyncExternalStoreWithSelector:h}=y;let f=!1;const I=t=>t;function O(t,e=I,n){(m?"production":void 0)!=="production"&&n&&!f&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),f=!0);const r=h(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,n);return _(r),r}const p=t=>{(m?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?R(t):t,n=(r,o)=>O(e,r,o);return Object.assign(n,e),n},P=t=>t?p(t):p;var E,b;const S=typeof window<"u"&&((E=window.document)!=null&&E.createElement||((b=window.navigator)==null?void 0:b.product)==="ReactNative")?i.useLayoutEffect:i.useEffect;function L(){const t=P(e=>({current:new Array,version:0,set:e}));return{In:({children:e})=>{const n=t(o=>o.set),r=t(o=>o.version);return S(()=>{n(o=>({version:o.version+1}))},[]),S(()=>(n(({current:o})=>({current:[...o,e]})),()=>n(({current:o})=>({current:o.filter(c=>c!==e)}))),[e,r]),null},Out:()=>{const e=t(n=>n.current);return i.createElement(i.Fragment,null,e)}}}export{L as t};
